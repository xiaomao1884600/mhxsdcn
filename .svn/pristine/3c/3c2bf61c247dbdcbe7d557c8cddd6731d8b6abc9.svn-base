<?php

/**
 * 引导文件
 *
 * @author $Author: 5590548@qq.com $
 *
 */
class Bootstrap extends Yaf\Bootstrap_Abstract
{

	private $_config;

	/**
	 * 初始化配置项
	 *
	 */
	public function _initConfig()
	{
		$this->_config = Yaf\Application::app()->getConfig();
		Yaf\Registry::set('config', $this->_config);
	}

	/**
	 * 初始化命名空间，以 Zend, Local, Third 开头的类为本地类
	 *
	 */
	public function _initNamespaces()
	{
		Yaf\Loader::getInstance()->registerLocalNameSpace(array(
			'Zend',
			'Local',
			'Third'
		));
	}

	/**
	 * 注册常量
	 *
	 *
	 */
	public function _initConstant()
	{
		// 项目URL
		define('SYSTEMURL', $this->_config->application->baseUrl);

		//学院网URL
		define('EDUURL', $this->_config->application->eduUrl);

		//图片服务器地址
		define('PICURL',$this->_config->application->picUrl);

		//图片存储路径
		define('PICDIR',$this->_config->application->picDir);

		// 默认分页数
		define('PERPAGE', $this->_config->pages->perpage);

		// 支付成功
		define('ALIPAY_SUCCESS', $this->_config->alipay->success);
		// 支付失败
		define('ALIPAY_FAIL', $this->_config->alipay->fail);

		//默认Memcache过期时间
		define('EXPIRE', $this->_config->mem->expire);

		//火星看点默认显示分页数
		define('ASPECTNUM', $this->_config->aspect->num);

		//设置表前缀
		define('PREFIX', $this->_config->database->params->prefix);
	}

	/**
	 * 自定义路由
	 *
	 */
	public function _initRoute(Yaf\Dispatcher $dispatcher)
	{
		$router = $dispatcher::getInstance()->getRouter();
		//\Local\Util\Debug::x(Yaf\Registry::get("config")->routes);
		//$router->addConfig(Yaf\Registry::get("config")->routes);
	}

	/**
	 * 连接数据库，设置数据库适配器
	 *
	 */
	public function _initDefaultDbAdapter()
	{
		$db = new Zend\Db\Adapter\Adapter(
				$this->_config->database->params->toArray()
		);

		Yaf\Registry::set('db', $db);
	}

	/**
	 * 连接Memcache
	 *
	 */
	public function _initMem()
	{
		$memcache = new Local\Util\Mem(
				$this->_config->mem->toArray());
		Yaf\Registry::set('memcache', $memcache);
	}

	/**
	 * 初始化插件
	 *
	 * @param Yaf_Dispatcher $dispatcher
	 */
	public function _initPlugin(Yaf\Dispatcher $dispatcher)
	{
		$site = new SitePlugin();
		$dispatcher->registerPlugin($site);

		//$divice = new DevicePlugin();
		//$dispatcher->registerPlugin($divice);
	}

}